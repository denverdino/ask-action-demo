# This workflow will build a docker container, publish it to Alibaba Cloud Container Registry, and deploy it to Alibaba Cloud Kubernetes Service (ACK) / Serverless Kubernetes Service (ASK) when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your ACK/ASK Kubernetes cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: 
#
# 3. Change the values for the IMAGE, and DEPLOYMENT_NAME environment variables (below).
#

name: Build and Deploy to ACK/ASK

on: [push]

env:
  CLUSTER_ID: c97d4bbd57dba4d0c84f92dce5d54f137
  REGION_ID: cn-hangzhou
  DEPLOYMENT_NAME: ask-test # TODO: update to deployment name
  NAMESPACE: ask-demo
  IMAGE: static-site
  REGISTRY: registry.cn-hangzhou.aliyuncs.com
  REGISTRY_VPC: registry-vpc.cn-hangzhou.aliyuncs.com
  TAG: ${{ github.sha }}
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to ACR with temp token
      uses: denverdino/acr-login@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$REGISTRY/$NAMESPACE/$IMAGE:$TAG" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Alibaba Cloud Container Registry
    - name: Publish
      run: |-
        docker push "$REGISTRY/$NAMESPACE/$IMAGE:$TAG"

    - name: Scan image in ACR
      uses: denverdino/acr-scan@v1
      with:
        region-id: "${{ env.REGION_ID }}"
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        repository: "${{ env.NAMESPACE }}/${{ env.IMAGE }}"
        tag: "${{ env.TAG }}"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash /dev/stdin 3.8.6

    - name: Set K8s context
      uses: denverdino/ack-set-context@v1
      with:
        access-key-id: "${{ secrets.ACCESS_KEY_ID }}"
        access-key-secret: "${{ secrets.ACCESS_KEY_SECRET }}"
        cluster-id: "${{ env.CLUSTER_ID }}"

    # Deploy the Docker image to the Alibaba Cloud Kubernetes cluster
    - name: Deploy
      run: |-
        ./kustomize edit set image REGISTRY/NAMESPACE/IMAGE:TAG=$REGISTRY_VPC/$NAMESPACE/$IMAGE:$TAG
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide